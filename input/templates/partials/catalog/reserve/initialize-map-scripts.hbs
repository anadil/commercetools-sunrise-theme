<script>
  $(window).load(function() {
    var addressList = $('.store-location-wrapper .addresses .list');
    var addressItem = addressList.find('.item');
    var coordsContainer = ".gm-computed-distance"
    var coordValues = "data-value";
    var activeClass = "address--active";

    // change the location onClick
    addressList.on('click', '.item', function() {
      var changeLocationLatLng = $(this).find(coordsContainer).attr(coordValues);
      var changeLocationParts = changeLocationLatLng.split(',');
      var changeLocationLat = parseFloat(changeLocationParts[0]);
      var changeLocationLng = parseFloat(changeLocationParts[1]);
      setLocation(changeLocationLat, changeLocationLng);
      addressItem.removeClass(activeClass);
      $(this).addClass(activeClass);
    });

    // checks if google maps API is loaded
    if (typeof google === 'object' && typeof google.maps === 'object') {
      var userPosition;

      var success = function(position) {
        // gets user geolocation
        userPosition = position;
        fromLat = userPosition.coords.latitude + ', ';
        fromLng = userPosition.coords.longitude;
        distanceFrom = fromLat.concat(fromLng);

        // calculates and updates the text (km) inside div
        $(coordsContainer).each(function() {
          var distanceTo = $(this).attr(coordValues);
          $(this).html(computeDistance(distanceFrom, distanceTo));
        });

        // after updating it will sort based on the shortest distance
        var sortByDistance = addressItem.sort(function(a,b){
            var a = $(a).find(coordsContainer).text();
            var b = $(b).find(coordsContainer).text();
            return a - b;
        });
        addressList.html(sortByDistance);

        // adds the active class and centers map based on shortest distance item
        var closestItem = addressItem.eq(0);
        var closestItemLatLng = closestItem.find(coordsContainer).attr(coordValues);
        var setLocationParts = closestItemLatLng.split(',');
        var setLocationLat = parseFloat(setLocationParts[0]);
        var setLocationLng = parseFloat(setLocationParts[1]);
        addressItem.removeClass(activeClass);
        closestItem.addClass(activeClass);
        setLocation(setLocationLat, setLocationLng);
      };

      var error = function(error) {
        console.log('Error occurred. Error code: ' + error.code);
        $(coordsContainer).each(function() {
          $(this).html('?');
        });
        // error.code can be:
        //   0: unknown error
        //   1: permission denied
        //   2: position unavailable (error response from location provider)
        //   3: timed out
      };
      navigator.geolocation.getCurrentPosition(success, error);
    }
  });


  function setLocation(newLat, newLng) {
      map.setCenter({
          lat : newLat,
          lng : newLng
      });
      map.setZoom(15);
  }
</script>
